{"version":3,"sources":["Components/Content.js","App.js","reportWebVitals.js","index.js"],"names":["Content","useState","words","setWords","example","setExample","count","setCount","input","setInput","buttonClick","setButtonClick","containerRef","useRef","useEffect","fetch","method","headers","then","response","json","data","console","log","list","definition","catch","err","error","className","type","value","onChange","e","target","id","onClick","setTimeout","current","classList","add","prevCount","ref","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQA2FeA,MAxFf,WAAoB,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAEaF,mBAAS,IAFtB,mBAEVG,EAFU,KAEDC,EAFC,OAGSJ,mBAAS,GAHlB,mBAGVK,EAHU,KAGHC,EAHG,OAISN,mBAAS,IAJlB,mBAIVO,EAJU,KAIHC,EAJG,OAKqBR,mBAAS,IAL9B,mBAKVS,EALU,KAKGC,EALH,KAMXC,EAAeC,iBAAO,MAiC5B,OA/BAC,qBAAU,WACY,KAAhBJ,GACFK,MAAM,yEAAD,OACsEL,GACzE,CACEM,OAAQ,MACRC,QAAS,CACP,iBACE,qDACF,kBACE,uDAILC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLC,QAAQC,IAAIF,EAAKG,KAAKlB,GAAOmB,YAC7BtB,EAASkB,EAAKG,KAAKlB,GAAOmB,YAC1BpB,EAAWgB,EAAKG,KAAKlB,GAAOF,YAE7BsB,OAAM,SAACC,GACNL,QAAQM,MAAMD,QAGnB,CAACrB,EAAOI,IAQT,sBAAKmB,UAAU,UAAf,UACE,qBAAKA,UAAU,eAAf,SACE,8CAEF,uBAAMA,UAAU,aAAhB,UACA,uBACEC,KAAK,OACLC,MAAOvB,EACPwB,SAAU,SAACC,GAAD,OAAOxB,EAASwB,EAAEC,OAAOH,UAErC,uBACA,sBAAKF,UAAU,aAAf,UACA,wBAAQC,KAAK,SAASK,GAAG,aAAaC,QAnBtB,WAClBzB,EAAeH,GACf6B,YAAW,WACPzB,EAAa0B,QAAQC,UAAUC,IAAI,mBACpC,MAeD,oBAGA,wBACEV,KAAK,SACLK,GAAG,WACHC,QAAS,kBACP7B,EAASD,EAAQ,EAAI,SAACmC,GAAD,OAAeA,EAAY,GAAInC,IAJxD,kBASA,wBACEwB,KAAK,SACLK,GAAG,WACHC,QAAS,kBAAM7B,GAAS,SAACkC,GAAD,OAAeA,EAAY,MAHrD,yBASA,sBAAKZ,UAAU,YAAYa,IAAK9B,EAAhC,UACE,sBAAKiB,UAAU,eAAf,UACE,yCACA,6BAAK,6BAAK3B,SAEZ,sBAAK2B,UAAU,gBAAf,UACE,yCACA,6BAAK,6BAAKzB,mBCtELuC,MATf,WACE,OACE,qBAAKd,UAAU,MAAf,SAEE,cAAC,EAAD,OCISe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8687cf52.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Content.css\";\r\n\r\nfunction Content() {\r\n  const [words, setWords] = useState([]);\r\n  const [example, setExample] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const [input, setInput] = useState(\"\");\r\n  const [buttonClick, setButtonClick] = useState(\"\");\r\n  const containerRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    if (buttonClick !== \"\") {\r\n      fetch(\r\n        `https://mashape-community-urban-dictionary.p.rapidapi.com/define?term=${buttonClick}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"x-rapidapi-key\":\r\n              \"cc0e3f1597msh8e9eba028b145dap1fea0cjsnd0f95a437c66\",\r\n            \"x-rapidapi-host\":\r\n              \"mashape-community-urban-dictionary.p.rapidapi.com\",\r\n          },\r\n        }\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(data.list[count].definition);\r\n          setWords(data.list[count].definition);\r\n          setExample(data.list[count].example);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    }\r\n  }, [count, buttonClick]);\r\n  const handleClick = () => {\r\n    setButtonClick(input);\r\n    setTimeout(() => {\r\n        containerRef.current.classList.add('showContainer')\r\n    }, 2000);\r\n  };\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"content-head\">\r\n        <h1>Dictionary</h1>\r\n      </div>\r\n      <form className=\"form-class\">\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n      />\r\n      <br />\r\n      <div className=\"button-grp\">\r\n      <button type=\"button\" id=\"search-btn\" onClick={handleClick}>\r\n        Search\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        id=\"next-btn\"\r\n        onClick={() =>\r\n          setCount(count < 9 ? (prevCount) => prevCount + 1 : count)\r\n        }\r\n      >\r\n        Next\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        id=\"prev-btn\"\r\n        onClick={() => setCount((prevCount) => prevCount - 1)}\r\n      >\r\n        Previous\r\n      </button>\r\n      </div>\r\n      \r\n      <div className=\"container\" ref={containerRef}>\r\n        <div className=\"meaning left\">\r\n          <h2>Meaning</h2>\r\n          <ul>{<li>{words}</li>}</ul>\r\n        </div>\r\n        <div className=\"example right\">\r\n          <h2>Example</h2>\r\n          <ul>{<li>{example}</li>}</ul>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Content;\r\n","import './App.css';\nimport Content from './Components/Content';\n// import Header from './Components/Header';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      {/* <Header title={'Dictionary App'} /> */}\n      <Content/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}